// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.2
// source: api.proto

package gen_grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GrpcApiClient is the client API for GrpcApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GrpcApiClient interface {
	// 会话
	SessRegister(ctx context.Context, in *SessRegisterReq, opts ...grpc.CallOption) (*SessRegisterRes, error)
	SessUnregister(ctx context.Context, in *SessUnregisterReq, opts ...grpc.CallOption) (*SessUnregisterRes, error)
	SessUserLogin(ctx context.Context, in *SessUserLoginReq, opts ...grpc.CallOption) (*SessUserLoginRes, error)
	SessUserLogout(ctx context.Context, in *SessUserLogoutReq, opts ...grpc.CallOption) (*SessUserLogoutRes, error)
	// 用户管理
	UmAddFriends(ctx context.Context, in *UmAddFriendsReq, opts ...grpc.CallOption) (*UmAddFriendsRes, error)
	UmDelFriends(ctx context.Context, in *UmDelFriendsReq, opts ...grpc.CallOption) (*UmDelFriendsRes, error)
	UmListFriends(ctx context.Context, in *UmListFriendsReq, opts ...grpc.CallOption) (*UmListFriendsRes, error)
	// 聊天
	ChatGetChatMsg(ctx context.Context, in *ChatGetChatMsgReq, opts ...grpc.CallOption) (*ChatGetChatMsgRes, error)
	ChatGetChatMsgHistWith(ctx context.Context, in *ChatGetChatMsgHistWithReq, opts ...grpc.CallOption) (*ChatGetChatMsgHistWithRes, error)
	ChatSendChatMsgTo(ctx context.Context, in *ChatSendChatMsgToReq, opts ...grpc.CallOption) (*ChatSendChatMsgToRes, error)
	ChatGetChatConvId(ctx context.Context, in *ChatGetChatConvIdReq, opts ...grpc.CallOption) (*ChatGetChatConvIdRes, error)
	// Post
	PostPutPost(ctx context.Context, in *PostPutPostReq, opts ...grpc.CallOption) (*PostPutPostRes, error)
	PostGetVideoHls(ctx context.Context, in *PostGetVideoHlsReq, opts ...grpc.CallOption) (*PostGetVideoHlsRes, error)
	PostGetPostList(ctx context.Context, in *PostGetPostListReq, opts ...grpc.CallOption) (*PostGetPostListRes, error)
	PostGetPostMetadata(ctx context.Context, in *PostGetPostMetadataReq, opts ...grpc.CallOption) (*PostGetPostMetadataRes, error)
	PostGetExplorerVideoList(ctx context.Context, in *PostGetExplorerVideoListReq, opts ...grpc.CallOption) (*PostGetExplorerVideoListRes, error)
	PostGetLikes(ctx context.Context, in *PostGetLikesReq, opts ...grpc.CallOption) (*PostGetLikesRes, error)
	PostDoLike(ctx context.Context, in *PostDoLikeReq, opts ...grpc.CallOption) (*PostDoLikeRes, error)
	PostUndoLike(ctx context.Context, in *PostUndoLikeReq, opts ...grpc.CallOption) (*PostUndoLikeRes, error)
	PostGetComments(ctx context.Context, in *PostGetCommentsReq, opts ...grpc.CallOption) (*PostGetCommentsRes, error)
	PostAddComment(ctx context.Context, in *PostAddCommentReq, opts ...grpc.CallOption) (*PostAddCommentRes, error)
	PostDelComment(ctx context.Context, in *PostDelCommentReq, opts ...grpc.CallOption) (*PostDelCommentRes, error)
}

type grpcApiClient struct {
	cc grpc.ClientConnInterface
}

func NewGrpcApiClient(cc grpc.ClientConnInterface) GrpcApiClient {
	return &grpcApiClient{cc}
}

func (c *grpcApiClient) SessRegister(ctx context.Context, in *SessRegisterReq, opts ...grpc.CallOption) (*SessRegisterRes, error) {
	out := new(SessRegisterRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/SessRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) SessUnregister(ctx context.Context, in *SessUnregisterReq, opts ...grpc.CallOption) (*SessUnregisterRes, error) {
	out := new(SessUnregisterRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/SessUnregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) SessUserLogin(ctx context.Context, in *SessUserLoginReq, opts ...grpc.CallOption) (*SessUserLoginRes, error) {
	out := new(SessUserLoginRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/SessUserLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) SessUserLogout(ctx context.Context, in *SessUserLogoutReq, opts ...grpc.CallOption) (*SessUserLogoutRes, error) {
	out := new(SessUserLogoutRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/SessUserLogout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) UmAddFriends(ctx context.Context, in *UmAddFriendsReq, opts ...grpc.CallOption) (*UmAddFriendsRes, error) {
	out := new(UmAddFriendsRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/UmAddFriends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) UmDelFriends(ctx context.Context, in *UmDelFriendsReq, opts ...grpc.CallOption) (*UmDelFriendsRes, error) {
	out := new(UmDelFriendsRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/UmDelFriends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) UmListFriends(ctx context.Context, in *UmListFriendsReq, opts ...grpc.CallOption) (*UmListFriendsRes, error) {
	out := new(UmListFriendsRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/UmListFriends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) ChatGetChatMsg(ctx context.Context, in *ChatGetChatMsgReq, opts ...grpc.CallOption) (*ChatGetChatMsgRes, error) {
	out := new(ChatGetChatMsgRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/ChatGetChatMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) ChatGetChatMsgHistWith(ctx context.Context, in *ChatGetChatMsgHistWithReq, opts ...grpc.CallOption) (*ChatGetChatMsgHistWithRes, error) {
	out := new(ChatGetChatMsgHistWithRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/ChatGetChatMsgHistWith", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) ChatSendChatMsgTo(ctx context.Context, in *ChatSendChatMsgToReq, opts ...grpc.CallOption) (*ChatSendChatMsgToRes, error) {
	out := new(ChatSendChatMsgToRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/ChatSendChatMsgTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) ChatGetChatConvId(ctx context.Context, in *ChatGetChatConvIdReq, opts ...grpc.CallOption) (*ChatGetChatConvIdRes, error) {
	out := new(ChatGetChatConvIdRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/ChatGetChatConvId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostPutPost(ctx context.Context, in *PostPutPostReq, opts ...grpc.CallOption) (*PostPutPostRes, error) {
	out := new(PostPutPostRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostPutPost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostGetVideoHls(ctx context.Context, in *PostGetVideoHlsReq, opts ...grpc.CallOption) (*PostGetVideoHlsRes, error) {
	out := new(PostGetVideoHlsRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostGetVideoHls", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostGetPostList(ctx context.Context, in *PostGetPostListReq, opts ...grpc.CallOption) (*PostGetPostListRes, error) {
	out := new(PostGetPostListRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostGetPostList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostGetPostMetadata(ctx context.Context, in *PostGetPostMetadataReq, opts ...grpc.CallOption) (*PostGetPostMetadataRes, error) {
	out := new(PostGetPostMetadataRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostGetPostMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostGetExplorerVideoList(ctx context.Context, in *PostGetExplorerVideoListReq, opts ...grpc.CallOption) (*PostGetExplorerVideoListRes, error) {
	out := new(PostGetExplorerVideoListRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostGetExplorerVideoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostGetLikes(ctx context.Context, in *PostGetLikesReq, opts ...grpc.CallOption) (*PostGetLikesRes, error) {
	out := new(PostGetLikesRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostGetLikes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostDoLike(ctx context.Context, in *PostDoLikeReq, opts ...grpc.CallOption) (*PostDoLikeRes, error) {
	out := new(PostDoLikeRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostDoLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostUndoLike(ctx context.Context, in *PostUndoLikeReq, opts ...grpc.CallOption) (*PostUndoLikeRes, error) {
	out := new(PostUndoLikeRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostUndoLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostGetComments(ctx context.Context, in *PostGetCommentsReq, opts ...grpc.CallOption) (*PostGetCommentsRes, error) {
	out := new(PostGetCommentsRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostGetComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostAddComment(ctx context.Context, in *PostAddCommentReq, opts ...grpc.CallOption) (*PostAddCommentRes, error) {
	out := new(PostAddCommentRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostAddComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *grpcApiClient) PostDelComment(ctx context.Context, in *PostDelCommentReq, opts ...grpc.CallOption) (*PostDelCommentRes, error) {
	out := new(PostDelCommentRes)
	err := c.cc.Invoke(ctx, "/gen_grpc.GrpcApi/PostDelComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcApiServer is the server API for GrpcApi service.
// All implementations must embed UnimplementedGrpcApiServer
// for forward compatibility
type GrpcApiServer interface {
	// 会话
	SessRegister(context.Context, *SessRegisterReq) (*SessRegisterRes, error)
	SessUnregister(context.Context, *SessUnregisterReq) (*SessUnregisterRes, error)
	SessUserLogin(context.Context, *SessUserLoginReq) (*SessUserLoginRes, error)
	SessUserLogout(context.Context, *SessUserLogoutReq) (*SessUserLogoutRes, error)
	// 用户管理
	UmAddFriends(context.Context, *UmAddFriendsReq) (*UmAddFriendsRes, error)
	UmDelFriends(context.Context, *UmDelFriendsReq) (*UmDelFriendsRes, error)
	UmListFriends(context.Context, *UmListFriendsReq) (*UmListFriendsRes, error)
	// 聊天
	ChatGetChatMsg(context.Context, *ChatGetChatMsgReq) (*ChatGetChatMsgRes, error)
	ChatGetChatMsgHistWith(context.Context, *ChatGetChatMsgHistWithReq) (*ChatGetChatMsgHistWithRes, error)
	ChatSendChatMsgTo(context.Context, *ChatSendChatMsgToReq) (*ChatSendChatMsgToRes, error)
	ChatGetChatConvId(context.Context, *ChatGetChatConvIdReq) (*ChatGetChatConvIdRes, error)
	// Post
	PostPutPost(context.Context, *PostPutPostReq) (*PostPutPostRes, error)
	PostGetVideoHls(context.Context, *PostGetVideoHlsReq) (*PostGetVideoHlsRes, error)
	PostGetPostList(context.Context, *PostGetPostListReq) (*PostGetPostListRes, error)
	PostGetPostMetadata(context.Context, *PostGetPostMetadataReq) (*PostGetPostMetadataRes, error)
	PostGetExplorerVideoList(context.Context, *PostGetExplorerVideoListReq) (*PostGetExplorerVideoListRes, error)
	PostGetLikes(context.Context, *PostGetLikesReq) (*PostGetLikesRes, error)
	PostDoLike(context.Context, *PostDoLikeReq) (*PostDoLikeRes, error)
	PostUndoLike(context.Context, *PostUndoLikeReq) (*PostUndoLikeRes, error)
	PostGetComments(context.Context, *PostGetCommentsReq) (*PostGetCommentsRes, error)
	PostAddComment(context.Context, *PostAddCommentReq) (*PostAddCommentRes, error)
	PostDelComment(context.Context, *PostDelCommentReq) (*PostDelCommentRes, error)
	mustEmbedUnimplementedGrpcApiServer()
}

// UnimplementedGrpcApiServer must be embedded to have forward compatible implementations.
type UnimplementedGrpcApiServer struct {
}

func (UnimplementedGrpcApiServer) SessRegister(context.Context, *SessRegisterReq) (*SessRegisterRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessRegister not implemented")
}
func (UnimplementedGrpcApiServer) SessUnregister(context.Context, *SessUnregisterReq) (*SessUnregisterRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessUnregister not implemented")
}
func (UnimplementedGrpcApiServer) SessUserLogin(context.Context, *SessUserLoginReq) (*SessUserLoginRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessUserLogin not implemented")
}
func (UnimplementedGrpcApiServer) SessUserLogout(context.Context, *SessUserLogoutReq) (*SessUserLogoutRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SessUserLogout not implemented")
}
func (UnimplementedGrpcApiServer) UmAddFriends(context.Context, *UmAddFriendsReq) (*UmAddFriendsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UmAddFriends not implemented")
}
func (UnimplementedGrpcApiServer) UmDelFriends(context.Context, *UmDelFriendsReq) (*UmDelFriendsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UmDelFriends not implemented")
}
func (UnimplementedGrpcApiServer) UmListFriends(context.Context, *UmListFriendsReq) (*UmListFriendsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UmListFriends not implemented")
}
func (UnimplementedGrpcApiServer) ChatGetChatMsg(context.Context, *ChatGetChatMsgReq) (*ChatGetChatMsgRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChatGetChatMsg not implemented")
}
func (UnimplementedGrpcApiServer) ChatGetChatMsgHistWith(context.Context, *ChatGetChatMsgHistWithReq) (*ChatGetChatMsgHistWithRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChatGetChatMsgHistWith not implemented")
}
func (UnimplementedGrpcApiServer) ChatSendChatMsgTo(context.Context, *ChatSendChatMsgToReq) (*ChatSendChatMsgToRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChatSendChatMsgTo not implemented")
}
func (UnimplementedGrpcApiServer) ChatGetChatConvId(context.Context, *ChatGetChatConvIdReq) (*ChatGetChatConvIdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChatGetChatConvId not implemented")
}
func (UnimplementedGrpcApiServer) PostPutPost(context.Context, *PostPutPostReq) (*PostPutPostRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostPutPost not implemented")
}
func (UnimplementedGrpcApiServer) PostGetVideoHls(context.Context, *PostGetVideoHlsReq) (*PostGetVideoHlsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostGetVideoHls not implemented")
}
func (UnimplementedGrpcApiServer) PostGetPostList(context.Context, *PostGetPostListReq) (*PostGetPostListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostGetPostList not implemented")
}
func (UnimplementedGrpcApiServer) PostGetPostMetadata(context.Context, *PostGetPostMetadataReq) (*PostGetPostMetadataRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostGetPostMetadata not implemented")
}
func (UnimplementedGrpcApiServer) PostGetExplorerVideoList(context.Context, *PostGetExplorerVideoListReq) (*PostGetExplorerVideoListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostGetExplorerVideoList not implemented")
}
func (UnimplementedGrpcApiServer) PostGetLikes(context.Context, *PostGetLikesReq) (*PostGetLikesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostGetLikes not implemented")
}
func (UnimplementedGrpcApiServer) PostDoLike(context.Context, *PostDoLikeReq) (*PostDoLikeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostDoLike not implemented")
}
func (UnimplementedGrpcApiServer) PostUndoLike(context.Context, *PostUndoLikeReq) (*PostUndoLikeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostUndoLike not implemented")
}
func (UnimplementedGrpcApiServer) PostGetComments(context.Context, *PostGetCommentsReq) (*PostGetCommentsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostGetComments not implemented")
}
func (UnimplementedGrpcApiServer) PostAddComment(context.Context, *PostAddCommentReq) (*PostAddCommentRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostAddComment not implemented")
}
func (UnimplementedGrpcApiServer) PostDelComment(context.Context, *PostDelCommentReq) (*PostDelCommentRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostDelComment not implemented")
}
func (UnimplementedGrpcApiServer) mustEmbedUnimplementedGrpcApiServer() {}

// UnsafeGrpcApiServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GrpcApiServer will
// result in compilation errors.
type UnsafeGrpcApiServer interface {
	mustEmbedUnimplementedGrpcApiServer()
}

func RegisterGrpcApiServer(s grpc.ServiceRegistrar, srv GrpcApiServer) {
	s.RegisterService(&GrpcApi_ServiceDesc, srv)
}

func _GrpcApi_SessRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessRegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).SessRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/SessRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).SessRegister(ctx, req.(*SessRegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_SessUnregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessUnregisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).SessUnregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/SessUnregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).SessUnregister(ctx, req.(*SessUnregisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_SessUserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessUserLoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).SessUserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/SessUserLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).SessUserLogin(ctx, req.(*SessUserLoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_SessUserLogout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessUserLogoutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).SessUserLogout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/SessUserLogout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).SessUserLogout(ctx, req.(*SessUserLogoutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_UmAddFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UmAddFriendsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).UmAddFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/UmAddFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).UmAddFriends(ctx, req.(*UmAddFriendsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_UmDelFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UmDelFriendsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).UmDelFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/UmDelFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).UmDelFriends(ctx, req.(*UmDelFriendsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_UmListFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UmListFriendsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).UmListFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/UmListFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).UmListFriends(ctx, req.(*UmListFriendsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_ChatGetChatMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatGetChatMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).ChatGetChatMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/ChatGetChatMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).ChatGetChatMsg(ctx, req.(*ChatGetChatMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_ChatGetChatMsgHistWith_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatGetChatMsgHistWithReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).ChatGetChatMsgHistWith(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/ChatGetChatMsgHistWith",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).ChatGetChatMsgHistWith(ctx, req.(*ChatGetChatMsgHistWithReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_ChatSendChatMsgTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatSendChatMsgToReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).ChatSendChatMsgTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/ChatSendChatMsgTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).ChatSendChatMsgTo(ctx, req.(*ChatSendChatMsgToReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_ChatGetChatConvId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatGetChatConvIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).ChatGetChatConvId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/ChatGetChatConvId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).ChatGetChatConvId(ctx, req.(*ChatGetChatConvIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostPutPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostPutPostReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostPutPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostPutPost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostPutPost(ctx, req.(*PostPutPostReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostGetVideoHls_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostGetVideoHlsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostGetVideoHls(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostGetVideoHls",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostGetVideoHls(ctx, req.(*PostGetVideoHlsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostGetPostList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostGetPostListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostGetPostList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostGetPostList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostGetPostList(ctx, req.(*PostGetPostListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostGetPostMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostGetPostMetadataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostGetPostMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostGetPostMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostGetPostMetadata(ctx, req.(*PostGetPostMetadataReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostGetExplorerVideoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostGetExplorerVideoListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostGetExplorerVideoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostGetExplorerVideoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostGetExplorerVideoList(ctx, req.(*PostGetExplorerVideoListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostGetLikes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostGetLikesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostGetLikes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostGetLikes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostGetLikes(ctx, req.(*PostGetLikesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostDoLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostDoLikeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostDoLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostDoLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostDoLike(ctx, req.(*PostDoLikeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostUndoLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostUndoLikeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostUndoLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostUndoLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostUndoLike(ctx, req.(*PostUndoLikeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostGetComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostGetCommentsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostGetComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostGetComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostGetComments(ctx, req.(*PostGetCommentsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostAddComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostAddCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostAddComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostAddComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostAddComment(ctx, req.(*PostAddCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GrpcApi_PostDelComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostDelCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcApiServer).PostDelComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gen_grpc.GrpcApi/PostDelComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcApiServer).PostDelComment(ctx, req.(*PostDelCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

// GrpcApi_ServiceDesc is the grpc.ServiceDesc for GrpcApi service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GrpcApi_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gen_grpc.GrpcApi",
	HandlerType: (*GrpcApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SessRegister",
			Handler:    _GrpcApi_SessRegister_Handler,
		},
		{
			MethodName: "SessUnregister",
			Handler:    _GrpcApi_SessUnregister_Handler,
		},
		{
			MethodName: "SessUserLogin",
			Handler:    _GrpcApi_SessUserLogin_Handler,
		},
		{
			MethodName: "SessUserLogout",
			Handler:    _GrpcApi_SessUserLogout_Handler,
		},
		{
			MethodName: "UmAddFriends",
			Handler:    _GrpcApi_UmAddFriends_Handler,
		},
		{
			MethodName: "UmDelFriends",
			Handler:    _GrpcApi_UmDelFriends_Handler,
		},
		{
			MethodName: "UmListFriends",
			Handler:    _GrpcApi_UmListFriends_Handler,
		},
		{
			MethodName: "ChatGetChatMsg",
			Handler:    _GrpcApi_ChatGetChatMsg_Handler,
		},
		{
			MethodName: "ChatGetChatMsgHistWith",
			Handler:    _GrpcApi_ChatGetChatMsgHistWith_Handler,
		},
		{
			MethodName: "ChatSendChatMsgTo",
			Handler:    _GrpcApi_ChatSendChatMsgTo_Handler,
		},
		{
			MethodName: "ChatGetChatConvId",
			Handler:    _GrpcApi_ChatGetChatConvId_Handler,
		},
		{
			MethodName: "PostPutPost",
			Handler:    _GrpcApi_PostPutPost_Handler,
		},
		{
			MethodName: "PostGetVideoHls",
			Handler:    _GrpcApi_PostGetVideoHls_Handler,
		},
		{
			MethodName: "PostGetPostList",
			Handler:    _GrpcApi_PostGetPostList_Handler,
		},
		{
			MethodName: "PostGetPostMetadata",
			Handler:    _GrpcApi_PostGetPostMetadata_Handler,
		},
		{
			MethodName: "PostGetExplorerVideoList",
			Handler:    _GrpcApi_PostGetExplorerVideoList_Handler,
		},
		{
			MethodName: "PostGetLikes",
			Handler:    _GrpcApi_PostGetLikes_Handler,
		},
		{
			MethodName: "PostDoLike",
			Handler:    _GrpcApi_PostDoLike_Handler,
		},
		{
			MethodName: "PostUndoLike",
			Handler:    _GrpcApi_PostUndoLike_Handler,
		},
		{
			MethodName: "PostGetComments",
			Handler:    _GrpcApi_PostGetComments_Handler,
		},
		{
			MethodName: "PostAddComment",
			Handler:    _GrpcApi_PostAddComment_Handler,
		},
		{
			MethodName: "PostDelComment",
			Handler:    _GrpcApi_PostDelComment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
